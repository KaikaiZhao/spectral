{"name":"ppa","tagline":"Probabilistic Point Assimilation: Variational Inference Software for Gaussian Processes.","body":"PPA Software\r\n============\r\n\r\nThis page will describe examples of how to use the Probabilistic Point\r\nAssimilation Software (PPA) available for [download\r\nhere](http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/downloadForm.cgi?toolbox=ppa).\r\n\r\n### Release Information\r\n\r\nCurrent release is 0.1.\r\n\r\nRelease 0.1 is the first release of this software.\r\n\r\n| **Toolbox**                          | **Version**                         |\r\n+--------------------------------------+-------------------------------------+\r\n| [KERN](/kern/downloadFiles)          | 0.142                               |\r\n| [NDLUTIL](/ndlutil/downloadFiles)    | 0.15                                |\r\n| [OPTIMI](/optimi/downloadFiles)      | 0.13                                |\r\n| [PRIOR](/prior/downloadFiles)        | 0.13                                |\r\n| [MLTOOLS](/mltools/downloadFiles)    | 0.11                                |\r\n| [NOISE](/noise/downloadFiles)        | 0.13                                |\r\n\r\nFinally you will also need the [NETLAB\r\ntoolbox](http://www.aston.ac.uk/eas/research/groups/ncrg/resources/netlab/) in your path.\r\n\r\nSetting the test up\r\n-------------------\r\n\r\nIn order for the code to function correctly, the files need to be set-up\r\nin the structure depicted in the following figure\r\n\r\n![](dirfig.png)\r\n\r\nIt should be noted that the [Gunnar\r\nDatasets](http://users.rsise.anu.edu.au/~raetsch/data/index.html) have\r\nhad their original directory structure changed. For instance, for the\r\n**Ringnorm** dataset the downloaded structure takes the form\r\n\r\n`\\\\home\\brain\\raetsch\\expose\\ringnorm\\*.asc`\r\n\r\nbut we have it as\r\n\r\n`\\\\ROOT\\mlprojects\\data\\ringnorm\\*.asc .`\r\n\r\nin our directory structure. Similarly any of the datasets needs to be in\r\nthe above form, with the data files being found within the directory\r\nwith the same name. We also note that all the required M file packages\r\nneed to be added to the path. All the test scripts are stored at\r\n`ROOT/mlprojects/ppa/gunnarTests/` and the test M files are put into the\r\nPPA `matlab ` directory.\r\n\r\n### Enabling all scripts and M files for the tests\r\n\r\nIn the following scripts *ppaGunnarConvergence.sh*, *ppaGunnarPlot.sh*,\r\n*ppaGunnar.sh*, *ppaGunnarResults.sh* and *ppaTestGunnar.sh* the line\r\n\r\n`path('/home/nk3/mlprojects/matlab/general',path)`\r\n\r\nneeds to be changed to\r\n\r\n`path('/USERSROOT/mlprojects/matlab/general',path)`\r\n\r\nwhere `USERSROOT` is the location of the mlprojects directory.\r\n\r\nIt is also noted that the following files need changing to suit the\r\nusers file store as well, these M files are *ppaGunnarConvergence.m*,\r\n*ppaGunnarData.m*, *ppaGunnarResults.m*, *ppaGunnarResultsTest.m*,\r\n*ppaGunnarTest.m*, *ppaPlotConvergenceResults.m*,\r\n*ppaPlotMultipleConvergenceResults1.m*,\r\n*ppaPlotMultipleConvergenceResults2.m* and\r\n*ppaPlotMultipleConvergenceResults3.m*.\r\n\r\nWe need to modify these test M files such that we are calling the\r\ncorrect directory structure. As such you need to add or change the home\r\nparameter to your `ROOT` directory. For instance in the files in there\r\norignal form the files have three home options which are\r\n\r\n```\r\n% My desktop\r\n% HOME = 'h:\\';\r\n% My Laptop home\r\n% HOME = 'd:\\work';\r\n% My Pascal cluster home\r\n% HOME = '/home/nk3';\r\n```\r\n\r\nThese cover the three machines I have run these tests on. You need to\r\nchange one of these such that\r\n\r\n``` % Your Home\r\nHOME = 'ROOT';\r\n```\r\n\r\nwhere `ROOT` is the directory in which the `mlprojects` directory is\r\nstored. With these changes this completes the setup.\r\n\r\nFour demos\r\n----------\r\n\r\nWe have four simple demos that can be run from the directly from the ppa\r\ndirectory (but still ensure the data stes are in the correct positon\r\nwithin the directory structure). The first three tests are\r\nclassification tests on a linear seperable case, an overlap case and a\r\nBanana dataset. The final case is a very simple regression case noise\r\nmodel, although we do note that regression for the model is tractable\r\nand does not require the approximation we include this test to show show\r\nhow easy it is to plug in different nosie models.\r\n\r\n### Linear seperable demo\r\n\r\nFrom the matlab command line, ensure you our within\r\n`/USERSROOT/mlprojects/ppa/matlab.`\r\n\r\nNow run the following command at the command prompt\r\n\r\n```matlab\r\n>>  demppa1\r\n```\r\n\r\nOnce the model has reached convergence the following plot should be\r\ndisplayed.\r\n\r\n![](dem1plot.png)\\\r\n This plot shows the final plot for the **linear seperable** dataset.\r\n\r\n### Overlap demo\r\n\r\nFrom the matlab command line, ensure you our within\r\n`/USERSROOT/mlprojects/ppa/matlab.`\r\n\r\nNow run the following command at the command prompt\r\n\r\n`>>  demppa2`\r\n\r\nOnce the model has reached convergence the following plot should be\r\ndisplayed.\r\n\r\n![](dem2plot.png)\\\r\n This plot shows the final plot for the **overlap** dataset.\r\n\r\n### Banana demo\r\n\r\nFrom the matlab command line, ensure you our within\r\n`/USERSROOT/mlprojects/ppa/matlab.`\r\n\r\nNow run the following command at the command prompt\r\n\r\n```matlab\r\n>>  demppa3\r\n```\r\n\r\nOnce the model has reached convergence the following plot should be\r\ndisplayed.\r\n\r\n![](dem3plot.png)\r\n This plot shows the final plot for the **banana** dataset.\r\n\r\n### Regression demo\r\n\r\nFrom the matlab command line, ensure you our within\r\n`/USERSROOT/mlprojects/ppa/matlab.`\r\n\r\nNow run the following command at the command prompt\r\n\r\n```matlab\r\n>>  demppaRegression1\r\n```\r\n\r\nOnce the model has reached convergence the following plot should be\r\ndisplayed.\r\n\r\n![](regressplot.png) \r\n This plot shows the final plot for the **regression** dataset.\r\n\r\nConvergence tests using the scripts\r\n-----------------------------------\r\n\r\nThe script files were designed to be run on a SCG managed cluster\r\nprimarily the Pascal cluster. To run repeat the following\r\n\r\nFrom the server command line run the following\r\n\r\n```sh\r\n$ bash ppaGunnarConvergenceSCG.sh\r\n```\r\n\r\nonce all the processes have finished running you can then run\r\n\r\n```sh\r\n$ bash ppaGunnarplot.sh\r\n```\r\n\r\nthis will result in the convergence figures being plotted. The EPS plots\r\nwill be saved in the following location\r\n\r\n`ROOT\\mlprojects\\data\\DATASETNAME\\ICMLconv\\ DATASETNAME_1 convFig.eps`\r\n\r\n`ROOT\\mlprojects\\data\\DATASETNAME\\ICMLconv\\ DATASETNAME_1_cpuFig.eps`\r\n\r\nwhere the former is a plot of the convergence of the standard\r\nvariational method compared with that of the KL corrected bound and the\r\nlatter is a plot of the CPU times per iteration.\r\n\r\nConvergence tests directly from the Matlab command line\r\n-------------------------------------------------------\r\n\r\nThe following example is for the **banana** dataset and for the first\r\nfold.\r\n\r\nFrom the matlab command line move to the `ppa/gunnarTests` directory.\r\n\r\nFirst run the following comman in the gunnarTest folder\r\n\r\n```matlab\r\n>>  ppaGunnarConvergence('banana',1)\r\n```\r\n\r\nafter which there will be a bit of a wait.\r\n\r\nAfter this process has finished now run the following command at the\r\ncommand prompt\r\n\r\n```matlab\r\n>>  ppaPlotConvergenceResults('banana',1)\r\n```\r\n\r\nThis command should result in the following information and plots to be\r\ndisplayed.\r\n\r\n```\r\nKL classification = 0.1181633 and SV classification = 0.1179592\r\nKL loglike = -130.8580181 and SV loglike = -130.8979431\r\nKL total number of iterations = 120.0000000,\r\nSV total number of iterations = 4102.0000000\r\nThe difference between the iteration numbers (SV - KL) = 3982.0000000\r\nKL total CPU time = 1127.5400000 and SV total CPU time = 22544.1100000\r\nThe difference between the CPU times (SV - KL) = 21416.5700000`\r\n```\r\n\r\n![](bananaconv.png) \r\n This plot shows the convergence figure for the **banana** dataset.\r\n\r\n![](bananacpu.png) \r\n This plot shows the CPU times figure for the **banana** dataset.\r\n\r\nNote if you wished to run these for any of the other datasets just\r\nsubstitute in the particular data sets name.\r\n\r\nClassification tests\r\n--------------------\r\n\r\nOnce again the scripts were designed to be run on the SCG managed pascal\r\ncluster. To run them you need to set up the files as previously noted.\r\n\r\nFrom the command prompt on the cluster you first need move to the\r\ndirectory `ROOT\\mlprojects\\ppa\\gunnartests\\`. From there you frist run\r\nthe following\r\n\r\n```\r\n>>bash ppaGunnar.sh\r\n```\r\n\r\nthis will send a lot of jobs to the cluster. These will take a while to\r\nrun so be prepared for a wait.\r\n\r\nOnce these jobs have completed the next step is to run the following\r\nscript\r\n\r\n```\r\n>>bash ppaGunnarResults.sh\r\n```\r\n\r\nOnce again this will send a job to the cluster but unlike the other this\r\nshould only take a minute to run. Once this job is complete we then have\r\nto finally run\r\n\r\n```\r\n>>bash ppaTestGunnar.sh\r\n```\r\n\r\nOnce these final jobs has finished you will find in your `ROOT`\r\ndirectory a set of .mat files namely\r\n\r\n`banana.mat, breast-cancer.mat,diabetis.mat, german.mat, heart.mat, titanic.mat, twonorm.mat and waveform.mat.`\r\n\r\nThe mean and standard deviation of the test error for each data set can\r\nbe found by first loading the dataset's `*.mat` (in the following we are\r\nloading the banana data set)\r\n\r\n```\r\n>> bananaLoad =  load('banana.mat')\r\n```\r\nwe can then find the mean\r\n\r\n```\r\n>> meanB =  mean(bananaLoad.er)\r\n```\r\nand the standard deviation\r\n```\r\n>> meanB =  std(bananaLoad.er)\r\n```\r\n\r\n","google":"UA-62968536-1","note":"Don't delete this file! It's used internally to help with page regeneration."}